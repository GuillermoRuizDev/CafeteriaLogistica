@using Cafeteria.Domain.Model
@using Cafeteria.Domain.ViewModel
@using Newtonsoft.Json
@model WorkOrderCreateViewModel
@{
    ViewBag.Title = "Crear Orden";
}

<h2>Crear Orden de Trabajo</h2>

<form action="/WorkOrder/CreateWorkOrder" method="post">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Product">Producto</label>
                @Html.DropDownList("Products", new SelectList(ViewBag.Products, "ProductId", "Name"), "-- Select Product --", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Quantity">Cantidad</label>
                <input asp-for="Quantity" type="number" min="1" class="form-control" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 pt-3">
            <input type="button" value="Agregar pedido" class="btn btn-primary" onclick="addWorkOrderDetail()" />
        </div>            
    </div>

    <div class="row">
        <div class="col-md-12">
            <table id="orders" class="table">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.WorkOrderDetails != null)
                    {
                        @foreach (var workOrderDetail in Model.WorkOrderDetails)
                        {
                            <tr>
                                <td>
                                    @workOrderDetail.Product.Name
                                </td>
                                <td>
                                    <input type="number" asp-for="WorkOrderDetails[0].Quantity" value="@workOrderDetail.Quantity" class="form-control" />
                                </td>
                                <td>
                                    @workOrderDetail.Product.Price
                                </td>
                            </tr>
                        }    
                    }
                    
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <button type="button" id="sendOrder" onclick="handleClick()" class="btn btn-primary" >
                Crear Orden</button>
        </div>
    </div>
</form>

<button type="button" id="modal" class="d-none" data-bs-toggle="modal" data-bs-target="#response">
  Launch demo modal
</button>

<!-- Modal -->
<div id="response" class="modal fade" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Sobre tu pedido</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div id="message" class="modal-body">
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>

<script>    
    let productDetails = new Array();

    const addWorkOrderDetail = () =>{        
        const productsData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Products));

        let productId = document.querySelector("select[id='Products']").value;
        let productName = document.querySelector("select[id='Products']").selectedOptions[0].text;
        let quantity = document.querySelector("input[id='Quantity']").value;

        if (!(quantity>0)) return;

        let price = productsData.find(p => p.ProductId == productId).Price;

        addRowToTable(productName, quantity, price);        

        let workOrderDetail = {
            'ProductId' : parseInt(productId),
            'Quantity' : parseFloat(quantity)
        }

        productDetails.push(workOrderDetail);                

    };

    const addRowToTable = (productName, quantity, price) => {
        var row = document.createElement("tr");
        var productCell = document.createElement("td");
        productCell.innerHTML = productName;

        var quantityCell = document.createElement("td");
        quantityCell.innerHTML = quantity;

        var priceCell = document.createElement("td");
        priceCell.innerHTML = quantity * price;

        row.appendChild(productCell);
        row.appendChild(quantityCell);
        row.appendChild(priceCell);

        document.querySelector("#orders tbody").appendChild(row);
    };

    const handleClick = (event) => {        

          if (productDetails.length==0){
              $("#message").html("<p style='color:red;'>Debes agregar un pedido</>");
              $("#modal").click();
          }else{
              $.ajax({
                url: "/WorkOrder/CreateWorkOrder",
                type: "POST",
                data : JSON.stringify(productDetails),
                dataType: "json",
                async: true,
                contentType: "application/json"
          }).then(response => {
              if(response.total>0){
                  $("#message").html("<p>Su pedido está siendo atendido. Pronto recibirá una llamada para confirmar su orden."
                        +"<br> <strong>Subtotal: " + response.subtotal.toString() + "</strong> "
                        +"<br> <strong>Impuestos: " + response.impuesto.toString() + "</strong>"
                        +"<br> <strong>Total: " + response.total.toString() + "</strong></p>");
              }else{
                  $("#message").html("<p style='color:red;'>Hemos tenido un problema al momento de registrar su orden, por favor intentelo más tarde</>");
              }
              $("#modal").click();
                            
            });
          }          
    };        
</script>